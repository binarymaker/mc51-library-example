C51 COMPILER V9.60.0.0   GPIO                                                              06/29/2019 08:48:31 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE GPIO
OBJECT MODULE PLACED IN .\Objects\gpio.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\mc51-library\drivers\gpio.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\mc51-l
                    -ibrary\modules;..\mc51-library\drivers;..\mc51-library\stdint) DEBUG OBJECTEXTEND PRINT(.\Listings\gpio.lst) TABS(2) OBJ
                    -ECT(.\Objects\gpio.obj)

line level    source

   1          
   2          /**
   3            ******************************************************************************
   4            * ______  _                             ___  ___        _               
   5            * | ___ \(_)                            |  \/  |       | |              
   6            * | |_/ / _  _ __    __ _  _ __  _   _  | .  . |  __ _ | | __ ___  _ __ 
   7            * | ___ \| || '_ \  / _` || '__|| | | | | |\/| | / _` || |/ // _ \| '__|
   8            * | |_/ /| || | | || (_| || |   | |_| | | |  | || (_| ||   <|  __/| |   
   9            * \____/ |_||_| |_| \__,_||_|    \__, | \_|  |_/ \__,_||_|\_\\___||_|   
  10            *                                 __/ |                                 
  11            *                                |___/                                  
  12            *                                                                       
  13            * Copyright (C) 2019 Binary Maker - All Rights Reserved
  14            *
  15            * This program and the accompanying materials are made available
  16            * under the terms described in the LICENSE file which accompanies
  17            * this distribution.
  18            * Written by Binary Maker <https://github.com/binarymaker>
  19            ******************************************************************************
  20            */
  21          
  22          #include "gpio.h"
  23          
  24          void
  25          GPIO_ModePin(GPIO_Port port, uint8_t pin, GPIO_Mode mode)
  26          {
  27   1        if (mode == GPIO_MODE_INPUT)
  28   1        {
  29   2          GPIO_WritePin(port, pin, GPIO_PIN_SET);
  30   2        }
  31   1        else
  32   1        {
  33   2          GPIO_WritePin(port, pin, GPIO_PIN_RESET);
  34   2        }
  35   1      }
  36          
  37          void 
  38          GPIO_WritePin(GPIO_Port port, uint8_t pin, GPIO_PinState state)
  39          {
  40   1        if (state == GPIO_PIN_RESET)
  41   1        {
  42   2          switch (port)
  43   2          {
  44   3          case GPIO_PORT_0:
  45   3            CLEAR_BIT(P0, pin);
  46   3            break;
  47   3          case GPIO_PORT_1:
  48   3            CLEAR_BIT(P1, pin);
  49   3            break;
  50   3          case GPIO_PORT_2:
  51   3            CLEAR_BIT(P2, pin);
  52   3            break;
  53   3          case GPIO_PORT_3:
C51 COMPILER V9.60.0.0   GPIO                                                              06/29/2019 08:48:31 PAGE 2   

  54   3            CLEAR_BIT(P3, pin);
  55   3            break;
  56   3          default:
  57   3            break;
  58   3          }
  59   2        }
  60   1        else
  61   1        {
  62   2          switch (port)
  63   2          {
  64   3          case GPIO_PORT_0:
  65   3            SET_BIT(P0, pin);
  66   3            break;
  67   3          case GPIO_PORT_1:
  68   3            SET_BIT(P1, pin);
  69   3            break;
  70   3          case GPIO_PORT_2:
  71   3            SET_BIT(P2, pin);
  72   3            break;
  73   3          case GPIO_PORT_3:
  74   3            SET_BIT(P3, pin);
  75   3            break;
  76   3          default:
  77   3            break;
  78   3          }
  79   2        }
  80   1      }
  81          
  82          void 
  83          GPIO_TogglePin(GPIO_Port port, uint8_t pin)
  84          {
  85   1        switch (port)
  86   1        {
  87   2        case GPIO_PORT_0:
  88   2          P0 = P0 ^ pin;
  89   2          break;
  90   2        case GPIO_PORT_1:
  91   2          P1 = P1 ^ pin;
  92   2          break;
  93   2        case GPIO_PORT_2:
  94   2          P2 = P2 ^ pin;
  95   2          break;
  96   2        case GPIO_PORT_3:
  97   2          P3 = P3 ^ pin;
  98   2          break;
  99   2        default:
 100   2          break;
 101   2        }
 102   1      }
 103          
 104          GPIO_PinState 
 105          GPIO_ReadPin(GPIO_Port port, uint8_t pin)
 106          {
 107   1        GPIO_PinState state;
 108   1          
 109   1        switch (port)
 110   1        {
 111   2        case GPIO_PORT_0:
 112   2          state = P0 & pin;
 113   2          break;
 114   2        case GPIO_PORT_1:
 115   2          state = P1 & pin;
C51 COMPILER V9.60.0.0   GPIO                                                              06/29/2019 08:48:31 PAGE 3   

 116   2          break;
 117   2        case GPIO_PORT_2:
 118   2          state = P2 & pin;
 119   2          break;
 120   2        case GPIO_PORT_3:
 121   2          state = P3 & pin;
 122   2          break;
 123   2        default:
 124   2          break;
 125   2        }
 126   1          
 127   1        if (state)
 128   1        {
 129   2          return 1;
 130   2        }
 131   1        
 132   1        return 0;
 133   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    165    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
